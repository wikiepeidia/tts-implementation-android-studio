name: Android CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: First attempt - Install Android SDK components (will fail but create license structure)
        continue-on-error: true
        uses: android-actions/setup-android@v3
        with:
          packages: >-
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            cmdline-tools;latest

      - name: Accept all licenses using the Flutter method
        run: |
          # Method 1: Use the proven Flutter doctor approach
          if command -v flutter >/dev/null 2>&1; then
            flutter doctor --android-licenses --verbose || true
          fi
          
          # Method 2: Use the yes + sdkmanager approach from Stack Overflow
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
          yes | sdkmanager --licenses || true
          
          # Method 3: Alternative paths for sdkmanager
          if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          fi
          
          if [ -f "$ANDROID_HOME/tools/bin/sdkmanager" ]; then
            yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || true
          fi
          
          # Method 4: Update SDK after accepting licenses
          sdkmanager --update || true

      - name: Second attempt - Install Android SDK components (should work now)
        uses: android-actions/setup-android@v3
        with:
          packages: >-
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            cmdline-tools;latest

      - name: Verify Android SDK setup
        run: |
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -la $ANDROID_HOME/licenses/ || echo "No licenses directory found"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Run lint
        run: ./gradlew lint --stacktrace || echo "Lint failed, continuing..."

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Upload lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: |
            **/build/reports/lint-results*.html
            **/build/reports/lint-results*.xml
          if-no-files-found: ignore

      # PUBLISH TO GITHUB PACKAGES
      - name: Publish to GitHub Packages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: github-package-${{ github.run_number }}
          path: app/build/outputs/apk/debug/*.apk

      # CREATE GITHUB RELEASE ON TAGS
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/debug/*.apk
          generate_release_notes: true
          draft: false
          body: |
            ## üì± APK Download
            Download the APK file attached to this release and sideload it on your Android device.
            
            ## üîß Build Info
            - Build Number: ${{ github.run_number }}
            - Commit SHA: ${{ github.sha }}
            - Build Date: ${{ github.event.head_commit.timestamp }}
            
            ## üìã Installation
            1. Download the APK file below
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK
            
            **Note:** This is an unsigned debug build for testing purposes.

      # CLEANUP AND SUMMARY
      - name: Build Summary
        if: always()
        run: |
          echo "=================================="
          echo "üéØ BUILD COMPLETED"
          echo "=================================="
          echo "Repository: ${{ github.repository }}"
          echo "Branch/Tag: ${{ github.ref }}"
          echo "Build Number: ${{ github.run_number }}"
          echo "Commit: ${{ github.sha }}"
          echo "=================================="
          
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "‚úÖ SUCCESS: APK built successfully!"
            echo "APK Size: $(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
          else
            echo "‚ùå FAILED: APK not found!"
            exit 1
          fi